<Window x:Class="DesktopApp.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopApp"
        xmlns:modern="http://modernwpf"
        mc:Ignorable="d"
        Title="LoginWindow" Height="445.5" Width="315" FontFamily="Roboto" WindowStyle="None" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" KeyDown="Window_KeyDown">
    <Border BorderThickness="1" BorderBrush="{DynamicResource grayBrush}">
        <Grid Background="#FFFEFEFE">
            <StackPanel VerticalAlignment="Center" Margin="20,0">
                <Image Width="250" Height="250" Source="logo.png"/>
                <Label x:Name="ErrorLabel" Content="Label" FontFamily="Roboto" Foreground="Red" FontWeight="Bold" Visibility="Hidden"/>
                <Border x:Name="PinBorder" Height="50" Margin="0,0,0,10" Background="White" BorderBrush="{DynamicResource grayBrush}" BorderThickness="1" >
                    <TextBox x:Name="PinTextBox" modern:TextBoxUI.WatermarkText="PIN" FontFamily="Roboto" FontSize="20" BorderBrush="{x:Null}" KeyDown="PinTextBox_KeyDown"/>
                </Border>
                <Button Content="Zaloguj" Height="50" FontFamily="Roboto" FontSize="20" Padding="0" Foreground="{DynamicResource grayBrush}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderThickness="1" BorderBrush="{DynamicResource grayBrush}" Background="{DynamicResource eeYellow}" Click="Button_Click" Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid>
                                                                <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" StrokeDashOffset="1.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                                <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" StrokeDashOffset="0.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderThemeBrush}"/>
                                    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}"/>
                                    <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="{Binding (modern:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="Border" Value="#FFFFEAB3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="Border" Value="#FFFFB800"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <Border x:Name="LoadingPanel" Background="#CCD1D1D1" Visibility="Hidden">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--<Image Source="loading.apng" SnapsToDevicePixels="True" Margin="20" />-->
                </StackPanel>
            </Border>
            <Button Name="CloseButton" Click="CloseButton_Click" Height="32" Width="32" HorizontalAlignment="Right" VerticalAlignment="Top" FontFamily="Roboto" Padding="0" FontWeight="Normal" Background="White" Foreground="{DynamicResource grayBrush}" BorderBrush="White" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" StrokeDashOffset="1.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" StrokeDashOffset="0.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderThemeBrush}"/>
                                <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}"/>
                                <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}">
                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="{Binding (modern:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" TargetName="Border" Value="#CCFF6565"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" TargetName="Border" Value="#FFFF0000"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="{DynamicResource grayBrush}" Height="16" Stretch="Fill" Width="16" />
            </Button>
        </Grid>
    </Border>
</Window>
