<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopApp"
        xmlns:twain="clr-namespace:NTwain;assembly=NTwain"
        xmlns:modern="http://modernwpf"
        xmlns:ViewModels="clr-namespace:DesktopApp.ViewModels" x:Class="DesktopApp.MainWindow"
        mc:Ignorable="d"
        Title="Doc-Digit" Height="900" Width="1200" MinWidth="800" MinHeight="600" Icon="scanner.ico"
        x:Name="theWindow" WindowStartupLocation="CenterScreen" KeyDown="TheWindow_KeyDown" FontFamily="Roboto" MouseLeftButtonDown="TheWindow_MouseLeftButtonDown">
    <Window.Resources>
        <local:TwainVM x:Key="vm"/>
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="vm"/>
    </Window.DataContext>
    <Grid Background="{DynamicResource NotSoWhite}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource grayBrush}">
            <Rectangle Fill="{DynamicResource eeYellow}"/>
        </Border>
        <TextBlock Text="Doc-Digit" FontFamily="Roboto Black" FontWeight="Bold" FontSize="36" VerticalAlignment="Center" Margin="10,3.397,0,3.397" Foreground="{DynamicResource grayBrush}"/>
        <GroupBox Header="1. Wybierz studenta" Grid.Row="1" FontFamily="Roboto" FontSize="20" Margin="10,10,10,10" Foreground="{DynamicResource grayBrush}" Template="{DynamicResource GroupBoxControl}" Grid.RowSpan="2">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="46"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border HorizontalAlignment="Left" Height="46" VerticalAlignment="Top" Width="270" Background="White" BorderBrush="{DynamicResource grayBrush}" BorderThickness="1">
                    <TextBox x:Name="SearchStudentBox" modern:TextBoxUI.WatermarkText="Szukaj (Ctrl+F)..." VerticalAlignment="Center" FontFamily="Roboto" Margin="0,5" BorderBrush="{x:Null}" KeyUp="TextBox_KeyUp" ToolTip="Szukaj studenta"/>
                </Border>
                <Viewbox DockPanel.Dock="Right" HorizontalAlignment="Right">
                    <Canvas Width="24" Height="24" Background="{DynamicResource grayBrush}">
                        <Path Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" Fill="#FF888888" />
                    </Canvas>
                </Viewbox>
                <ListBox x:Name="StudentsList" Grid.Row="1" Style="{StaticResource AppListBox}" BorderBrush="{DynamicResource grayBrush}" BorderThickness="1" ItemsSource="{Binding Students}" SelectedItem="{Binding SelectedStudent}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Grid.Row="1" Grid.Column="1" Margin="5">
                                <TextBlock FontFamily="Roboto" Foreground="{DynamicResource grayBrush}" TextWrapping="Wrap" Padding="0"><Run Text="{Binding name}"/><Run Text=" "/><Run Text="{Binding surname}"/><Run Text=", "/><Run Text="{Binding album_id}"/></TextBlock>
                                <TextBlock FontFamily="Roboto" Foreground="#FF323232" TextWrapping="Wrap" FontSize="14"><Run Text="w. "/><Run Text="{Binding faculty}"/><Run Text=", "/><Run Text="{Binding course_name}"/><Run Text=", sem. "/><Run Text="{Binding semester}"/></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </GroupBox>
        <GroupBox Header="2. Wybierz rodzaj dokumentu" Grid.Row="1" FontFamily="Roboto" FontSize="20" Margin="10" Foreground="{DynamicResource grayBrush}" Template="{DynamicResource GroupBoxControl}" Grid.Column="1">
            <ComboBox Margin="5" Height="46" FontFamily="Roboto" ItemsSource="{Binding DocTypes}" SelectedItem="{Binding SelectedDocument}" ToolTip="Wybierz rodzaj dokumentu" BorderBrush="{DynamicResource grayBrush}"/>
        </GroupBox>
        <GroupBox Header="3. Skanuj" Grid.Row="2" FontFamily="Roboto" FontSize="20" Margin="10,0,10,10" Foreground="{DynamicResource grayBrush}" Template="{DynamicResource GroupBoxControl}" Grid.Column="1">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="46"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <ListBox x:Name="ScansListBox" ItemsSource="{Binding CapturedImages}" SelectedItem="{Binding SelectedImage}" Margin="0,10" BorderBrush="{DynamicResource grayBrush}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Padding="4">
                                <Image Stretch="Uniform" 
                               RenderOptions.BitmapScalingMode="LowQuality"
                               Width="{Binding DataContext.ThumbnailSize, ElementName=theWindow}"
                               Height="{Binding DataContext.ThumbnailSize, ElementName=theWindow}"
                               Source="{Binding}"/>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Image Grid.Column="1" Margin="10,10,100,63" Source="{Binding SelectedImage}"/>
                <Button Grid.Column="1" Command="{Binding CaptureCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,10,63" Cursor="Hand" Padding="0" FontFamily="Roboto" FontSize="18" ToolTip="Skanuj" Foreground="#66F5C342">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid>
                                                                <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" StrokeDashOffset="1.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                                <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" StrokeDashOffset="0.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderThemeBrush}"/>
                                    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}"/>
                                    <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="{Binding (modern:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsDefault" Value="True"/>
                                                <Condition Property="IsEnabled" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource ModernAccent}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource AccentForeground}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ButtonPointerOverBackgroundThemeBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonPointerOverForegroundThemeBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="Black"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundThemeBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundThemeBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundThemeBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderThemeBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <StackPanel>
                        <Canvas Width="32" Height="32" Margin="0,10,0,0">
                            <Path Data="M6,2A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6M6,4H13V9H18V20H6V4M8,12V14H16V12H8M8,16V18H13V16H8Z" Fill="{DynamicResource grayBrush}" Height="32" Stretch="Fill" Width="29.091" />
                        </Canvas>
                        <AccessText Text="_Skanuj" Margin="10,2,10,10" Foreground="{DynamicResource grayBrush}"/>
                    </StackPanel>
                </Button>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Command="{Binding MoveUpCommand}" Margin="0" Cursor="Hand" ToolTip="Przenieś wyżej" Width="43" Height="43" Padding="0">
                        <StackPanel>
                            <Canvas Width="24" Height="24">
                                <Path Data="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z" Fill="{DynamicResource grayBrush}" />
                            </Canvas>
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding RemoveSelectedCommand}" Margin="10,0" Cursor="Hand" ToolTip="Usuń stronę" Width="43" Height="43" Padding="0">
                        <Canvas Width="24" Height="24">
                            <Path Data="M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8,9H16V19H8V9M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z" Fill="{DynamicResource grayBrush}" />
                        </Canvas>
                    </Button>
                    <Button Command="{Binding MoveDownCommand}" Margin="0" Cursor="Hand" ToolTip="Przenieś niżej" Width="43" Height="43" Padding="0">
                        <Canvas Width="24" Height="24">
                            <Path Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Fill="{DynamicResource grayBrush}" />
                        </Canvas>
                    </Button>
                </StackPanel>
                <StackPanel x:Name="ImageControls" VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal" Grid.Column="1" Margin="10,0,100,10" Visibility="Hidden">
                    <Button Command="{Binding RotateLeftCommand}" Margin="0" Cursor="Hand" ToolTip="Obróć w lewo" Width="43" Height="43" Padding="0">
                        <Canvas Width="24" Height="24">
                            <Path Data="M13,4.07V1L8.45,5.55L13,10V6.09C15.84,6.57 18,9.03 18,12C18,14.97 15.84,17.43 13,17.91V19.93C16.95,19.44 20,16.08 20,12C20,7.92 16.95,4.56 13,4.07M7.1,18.32C8.26,19.22 9.61,19.76 11,19.93V17.9C10.13,17.75 9.29,17.41 8.54,16.87L7.1,18.32M6.09,13H4.07C4.24,14.39 4.79,15.73 5.69,16.89L7.1,15.47C6.58,14.72 6.23,13.88 6.09,13M7.11,8.53L5.7,7.11C4.8,8.27 4.24,9.61 4.07,11H6.09C6.23,10.13 6.58,9.28 7.11,8.53Z" Fill="{DynamicResource grayBrush}" />
                        </Canvas>
                    </Button>
                    <Button Command="{Binding CropCommand}" Margin="10, 0" Cursor="Hand" ToolTip="Przytnij" Width="43" Height="43" Padding="0">
                        <Canvas Width="24" Height="24">
                            <Path Data="M7,17V1H5V5H1V7H5V17A2,2 0 0,0 7,19H17V23H19V19H23V17M17,15H19V7C19,5.89 18.1,5 17,5H9V7H17V15Z" Fill="{DynamicResource grayBrush}" />
                        </Canvas>
                    </Button>
                    <Button Command="{Binding RotateRightCommand}" Margin="0" Cursor="Hand" ToolTip="Obróć w prawo" Width="43" Height="43" Padding="0">
                        <Canvas Width="24" Height="24">
                            <Path Data="M16.89,15.5L18.31,16.89C19.21,15.73 19.76,14.39 19.93,13H17.91C17.77,13.87 17.43,14.72 16.89,15.5M13,17.9V19.92C14.39,19.75 15.74,19.21 16.9,18.31L15.46,16.87C14.71,17.41 13.87,17.76 13,17.9M19.93,11C19.76,9.61 19.21,8.27 18.31,7.11L16.89,8.53C17.43,9.28 17.77,10.13 17.91,11M15.55,5.55L11,1V4.07C7.06,4.56 4,7.92 4,12C4,16.08 7.05,19.44 11,19.93V17.91C8.16,17.43 6,14.97 6,12C6,9.03 8.16,6.57 11,6.09V10L15.55,5.55Z" Fill="{DynamicResource grayBrush}" />
                        </Canvas>
                    </Button>
                </StackPanel>
                <Button x:Name="SendButton" Command="{Binding SendCommand}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,10,0" Cursor="Hand" Height="43" Padding="0" Background="#CC20A464" ToolTip="Wyślij" Visibility="Hidden">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid>
                                                                <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" StrokeDashOffset="1.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                                <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" StrokeDashOffset="0.5" SnapsToDevicePixels="True" StrokeEndLineCap="Square" Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1 1"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderThemeBrush}"/>
                                    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}"/>
                                    <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="{Binding (modern:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsDefault" Value="True"/>
                                                <Condition Property="IsEnabled" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource ModernAccent}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource AccentForeground}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ButtonPointerOverBackgroundThemeBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonPointerOverForegroundThemeBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundThemeBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundThemeBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundThemeBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundThemeBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderThemeBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal">
                        <AccessText Text="_Wyślij" Margin="10,0,5,0" FontFamily="Roboto" FontSize="18"/>
                        <Canvas Width="16" Height="16" Margin="0,0,10,0">
                            <Path Data="M2,21L23,12L2,3V10L17,12L2,14V21Z" Fill="{Binding Parent.Parent.Parent.Foreground, RelativeSource={RelativeSource Self}}" Height="16" Stretch="Fill" Width="16" />
                        </Canvas>
                    </StackPanel>
                </Button>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="UserNameButton" Template="{DynamicResource TopBarButtonControlTemplate}" VerticalAlignment="Top" Cursor="Hand" Click="UserNameButton_Click" Height="49">
                <StackPanel Orientation="Horizontal" Margin="5,0">
                    <TextBlock FontSize="20" Text="{Binding CurrentUser.name}" FontFamily="Roboto" Foreground="{DynamicResource grayBrush}"/>
                    <Viewbox Width="20">
                        <Canvas Width="24" Height="24">
                            <Path Data="M7,10L12,15L17,10H7Z" Fill="{DynamicResource grayBrush}" />
                        </Canvas>
                    </Viewbox>
                </StackPanel>
            </Button>
            <Button x:Name="SettingsButton" Width="50" Template="{DynamicResource TopBarButtonControlTemplate}" VerticalAlignment="Top" Cursor="Hand" ToolTip="Ustawienia" Height="49" Click="Button_Click">
                <Canvas Width="24" Height="24" Margin="10">
                    <Path Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" Fill="{DynamicResource grayBrush}" />
                </Canvas>
            </Button>
        </StackPanel>
        <Border x:Name="SettingsPanel" Grid.Column="1" Grid.RowSpan="2" Background="{DynamicResource NotSoWhite}" Width="300" HorizontalAlignment="Right" Grid.Row="1" BorderBrush="{DynamicResource grayBrush}" BorderThickness="2,0,0,0" Visibility="Hidden">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Foreground="{DynamicResource grayBrush}" Background="{x:Null}" Content="Ustawienia" FontSize="24" Margin="10,10,0,10" />
                <StackPanel Grid.Row="1">
                    <StackPanel VerticalAlignment="Top" Margin="10">
                        <Label Foreground="{DynamicResource grayBrush}" Background="{x:Null}" Content="Wybór skanera" FontSize="20" Margin="0"/>
                        <ComboBox x:Name="SrcList" ItemsSource="{Binding DataSources}" SelectedItem="{Binding SelectedSource}" Height="46" BorderBrush="{DynamicResource grayBrush}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}" TextWrapping="Wrap"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button Content="Ustawienia skanera" Command="{Binding ShowDriverCommand}" Background="{DynamicResource NotSoWhite}" Template="{DynamicResource PlainButtonTemplate}" Height="46" Margin="0,5,0,0" FontFamily="Roboto" FontSize="14" BorderBrush="{DynamicResource grayBrush}"></Button>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Border>
        <Border x:Name="LogoutButton" Grid.Column="1" Height="35" Margin="0,0,50,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="100" CornerRadius="6" Background="{DynamicResource grayBrush}" Grid.Row="1" Visibility="Hidden">
            <Button Content="Wyloguj" FontFamily="Roboto" ToolTip="Wyloguj" BorderBrush="{x:Null}" Background="{DynamicResource grayBrush}" Foreground="#FFEEEEEE" Padding="0" Click="LogoutButton_Click" Cursor="Hand"/>
        </Border>
        <Border x:Name="UploadingPDF" Background="#7F1D1D1D" Grid.RowSpan="3" Grid.ColumnSpan="2" Visibility="Hidden">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Label Background="{x:Null}" Foreground="{DynamicResource NotSoWhite}" FontSize="30" FontWeight="Bold">
                    <Label.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard Duration="0:0:2" RepeatBehavior="Forever">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Trwa przesyłanie"/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="Trwa przesyłanie."/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:1.0" Value="Trwa przesyłanie.."/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:1.5" Value="Trwa przesyłanie..."/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Label.Triggers>
                </Label>
            </StackPanel>
        </Border>
    </Grid>
</Window>
